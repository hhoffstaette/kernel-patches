From 12a53f318624a4cbc902a704cd5741dce67b647d Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Mon, 12 Oct 2020 20:43:53 +0800
Subject: [PATCH] sched/alt: Fix compilation erro in pelt.c

---
 kernel/sched/alt_core.c  | 11 +++++++++--
 kernel/sched/alt_sched.h |  4 ++++
 2 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index f36264fea75c..d43ca62fd00f 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -11,6 +11,10 @@
  *		scheduler by Alfred Chen.
  *  2019-02-20	BMQ(BitMap Queue) kernel scheduler by Alfred Chen.
  */
+#define CREATE_TRACE_POINTS
+#include <trace/events/sched.h>
+#undef CREATE_TRACE_POINTS
+
 #include "sched.h"
 
 #include <linux/sched/rt.h>
@@ -42,8 +46,11 @@
 #include "pelt.h"
 #include "smp.h"
 
-#define CREATE_TRACE_POINTS
-#include <trace/events/sched.h>
+/*
+ * Export tracepoints that act as a bare tracehook (ie: have no trace event
+ * associated with them) to allow external modules to probe them.
+ */
+EXPORT_TRACEPOINT_SYMBOL_GPL(pelt_irq_tp);
 
 #define ALT_SCHED_VERSION "v5.9-r0"
 
diff --git a/kernel/sched/alt_sched.h b/kernel/sched/alt_sched.h
index 99be2c51c88d..03f8b8b1aa27 100644
--- a/kernel/sched/alt_sched.h
+++ b/kernel/sched/alt_sched.h
@@ -46,6 +46,8 @@
 
 #include "cpupri.h"
 
+#include <trace/events/sched.h>
+
 #ifdef CONFIG_SCHED_BMQ
 #include "bmq.h"
 #endif
@@ -496,6 +498,8 @@ static inline int sched_tick_offload_init(void) { return 0; }
 
 extern void schedule_idle(void);
 
+#define cap_scale(v, s) ((v)*(s) >> SCHED_CAPACITY_SHIFT)
+
 /*
  * !! For sched_setattr_nocheck() (kernel) only !!
  *
